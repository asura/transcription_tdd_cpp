<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="687px" preserveAspectRatio="none" style="width:1146px;height:687px;" version="1.1" viewBox="0 0 1146 687" width="1146px" zoomAndPan="magnify"><defs/><g><!--class Bank--><rect fill="#F8F8F8" height="45.0879" id="Bank" style="stroke: #383838; stroke-width: 1.5;" width="424" x="296.5" y="94"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="28" x="494.5" y="110.6016">Bank</text><line style="stroke: #383838; stroke-width: 1.5;" x1="297.5" x2="719.5" y1="118.1328" y2="118.1328"/><ellipse cx="307.5" cy="130.1104" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="398" x="316.5" y="132.7676">reduce(const Money&amp;, const Currency&amp;, const Rate&amp;) const : const Money</text><!--class Currency--><rect fill="#F8F8F8" height="78.998" id="Currency" style="stroke: #383838; stroke-width: 1.5;" width="256" x="380.5" y="417.5"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="483" y="434.1016">Currency</text><line style="stroke: #383838; stroke-width: 1.5;" x1="381.5" x2="635.5" y1="441.6328" y2="441.6328"/><rect fill="none" height="6" style="stroke: #595959; stroke-width: 1.0;" width="6" x="388.5" y="450.6104"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="400.5" y="456.2676">m_name : const std::string</text><line style="stroke: #383838; stroke-width: 1.5;" x1="381.5" x2="635.5" y1="462.5879" y2="462.5879"/><ellipse cx="391.5" cy="474.5654" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="400.5" y="477.2227">Currency(const std::string&amp;)</text><ellipse cx="391.5" cy="487.5205" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="400.5" y="490.1777">operator==(const Currency&amp;) const : bool</text><!--class Money--><rect fill="#F8F8F8" height="234.459" id="Money" style="stroke: #383838; stroke-width: 1.5;" width="339" x="6" y="340"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="37" x="157" y="356.6016">Money</text><line style="stroke: #383838; stroke-width: 1.5;" x1="7" x2="344" y1="364.1328" y2="364.1328"/><rect fill="none" height="6" style="stroke: #595959; stroke-width: 1.0;" width="6" x="14" y="373.1104"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="26" y="378.7676">m_amount : std::unordered_map&lt;Currency, int&gt;</text><line style="stroke: #383838; stroke-width: 1.5;" x1="7" x2="344" y1="385.0879" y2="385.0879"/><ellipse cx="17" cy="397.0654" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="26" y="399.7227">Money()</text><ellipse cx="17" cy="410.0205" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="26" y="412.6777">Money(int, const Currency&amp;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="29" y="425.6328"/><ellipse cx="17" cy="435.9307" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="26" y="438.5879">operator==(const Money&amp;) const : bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="29" y="451.543"/><ellipse cx="17" cy="461.8408" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="26" y="464.498">operator+(const Money&amp;) const : const Money</text><ellipse cx="17" cy="474.7959" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="26" y="477.4531">operator*(int) const : const Money</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="29" y="490.4082"/><ellipse cx="17" cy="500.7061" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="26" y="503.3633">reduce(const Currency&amp;, const Rate&amp;) const: const Money</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="29" y="516.3184"/><ellipse cx="17" cy="526.6162" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="97" x="26" y="529.2734">dollar(int) : Money</text><line style="stroke: #000000; stroke-width: 1.0;" x1="26" x2="123" y1="531.2734" y2="531.2734"/><ellipse cx="17" cy="539.5713" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="94" x="26" y="542.2285">franc(int) : Money</text><line style="stroke: #000000; stroke-width: 1.0;" x1="26" x2="120" y1="544.2285" y2="544.2285"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="29" y="555.1836"/><rect fill="#808080" height="6" style="stroke: #595959; stroke-width: 1.0;" width="6" x="14" y="562.4814"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="568.1387">void add(int, const Currency&amp;)</text><!--class Rate--><rect fill="#F8F8F8" height="78.998" id="Rate" style="stroke: #383838; stroke-width: 1.5;" width="407" x="606" y="200"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="26" x="796.5" y="216.6016">Rate</text><line style="stroke: #383838; stroke-width: 1.5;" x1="607" x2="1012" y1="224.1328" y2="224.1328"/><rect fill="none" height="6" style="stroke: #595959; stroke-width: 1.0;" width="6" x="614" y="233.1104"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="626" y="238.7676">m_rates : std::unordered_map&lt;FromTo, double&gt;</text><line style="stroke: #383838; stroke-width: 1.5;" x1="607" x2="1012" y1="245.0879" y2="245.0879"/><ellipse cx="617" cy="257.0654" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="626" y="259.7227">set(const Currency&amp;, const Currency&amp;, double) : void</text><ellipse cx="617" cy="270.0205" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="626" y="272.6777">find(const Currency&amp;, const Currency&amp;) const : std::optional&lt;double&gt;</text><!--class FromTo--><rect fill="#F8F8F8" height="96.9082" id="FromTo" style="stroke: #383838; stroke-width: 1.5;" width="264" x="722.5" y="408.5"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="815.5" y="425.1016">Rate::FromTo</text><line style="stroke: #383838; stroke-width: 1.5;" x1="723.5" x2="985.5" y1="432.6328" y2="432.6328"/><ellipse cx="733.5" cy="444.6104" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="742.5" y="447.2676">FromTo(const Currency&amp;, const Currency&amp;)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="745.5" y="460.2227"/><ellipse cx="733.5" cy="470.5205" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="742.5" y="473.1777">operator==(const FromTo&amp;) const : bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="745.5" y="486.1328"/><ellipse cx="733.5" cy="496.4307" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="742.5" y="499.0879">hash() const : std::size_t</text><path d="M465.5,8 L465.5,33.3105 A0,0 0 0 0 465.5,33.3105 L504.5,33.3105 L508.5,93.6466 L512.5,33.3105 L551.5,33.3105 A0,0 0 0 0 551.5,33.3105 L551.5,18 L541.5,8 L465.5,8 A0,0 0 0 0 465.5,8 " fill="#ECECEC" style="stroke: #383838; stroke-width: 1.0;"/><path d="M541.5,8 L541.5,18 L551.5,18 L541.5,8 " fill="#ECECEC" style="stroke: #383838; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="471.5" y="25.5684">為替変換器</text><path d="M102.5,635 L102.5,675.6211 A0,0 0 0 0 102.5,675.6211 L248.5,675.6211 A0,0 0 0 0 248.5,675.6211 L248.5,645 L238.5,635 L179.5,635 L175.5,574.1897 L171.5,635 L102.5,635 A0,0 0 0 0 102.5,635 " fill="#ECECEC" style="stroke: #383838; stroke-width: 1.0;"/><path d="M238.5,635 L238.5,645 L248.5,645 L238.5,635 " fill="#ECECEC" style="stroke: #383838; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="78" x="108.5" y="652.5684">手持ちの貨幣</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="125" x="108.5" y="667.8789">(複数の通貨を保持可)</text><path d="M465.5,643 L465.5,668.3105 A0,0 0 0 0 465.5,668.3105 L551.5,668.3105 A0,0 0 0 0 551.5,668.3105 L551.5,653 L541.5,643 L512.5,643 L508.5,496.6924 L504.5,643 L465.5,643 A0,0 0 0 0 465.5,643 " fill="#ECECEC" style="stroke: #383838; stroke-width: 1.0;"/><path d="M541.5,643 L541.5,653 L551.5,653 L541.5,643 " fill="#ECECEC" style="stroke: #383838; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="471.5" y="660.5684">通貨の種類</text><path d="M1048.5,227 L1048.5,235.5 L1013.0137,239.5 L1048.5,243.5 L1048.5,252.3105 A0,0 0 0 0 1048.5,252.3105 L1134.5,252.3105 A0,0 0 0 0 1134.5,252.3105 L1134.5,237 L1124.5,227 L1048.5,227 A0,0 0 0 0 1048.5,227 " fill="#ECECEC" style="stroke: #383838; stroke-width: 1.0;"/><path d="M1124.5,227 L1124.5,237 L1134.5,237 L1124.5,227 " fill="#ECECEC" style="stroke: #383838; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="1054.5" y="244.5684">為替レート</text><!--link Bank to Money--><path d="M486.3931,139.1049 C447.505,178.8688 364.2875,263.9606 293.7295,336.1077 " fill="none" id="Bank-Money" style="stroke: #383838; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#383838" points="289.9545,339.9677,299.1069,336.3299,293.4504,336.393,293.3873,330.7365,289.9545,339.9677" style="stroke: #383838; stroke-width: 1.0;"/><!--link Bank to Currency--><path d="M508.5,139.1049 C508.5,194.6599 508.5,338.6926 508.5,412.2875 " fill="none" id="Bank-Currency" style="stroke: #383838; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#383838" points="508.5,417.4625,512.5,408.4625,508.5,412.4625,504.5,408.4625,508.5,417.4625" style="stroke: #383838; stroke-width: 1.0;"/><!--link Bank to Rate--><path d="M563.708,139.0601 C603.9898,155.5207 659.7435,178.3038 707.9687,198.0105 " fill="none" id="Bank-Rate" style="stroke: #383838; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#383838" points="712.6114,199.9076,705.7933,192.8003,707.9829,198.0162,702.7671,200.2059,712.6114,199.9076" style="stroke: #383838; stroke-width: 1.0;"/><!--link Rate to FromTo--><path d="M820.3812,292.0926 C826.802,323.1262 834.9624,362.5682 841.6925,395.0969 " fill="none" id="Rate-FromTo" style="stroke: #383838; stroke-width: 1.0;"/><polygon fill="#383838" points="844.3845,408.1083,846.478,398.4845,843.3714,403.212,838.6439,400.1054,844.3845,408.1083" style="stroke: #383838; stroke-width: 1.0;"/><line style="stroke: #383838; stroke-width: 1.0;" x1="843.3714" x2="841.7506" y1="403.212" y2="395.3779"/><polygon fill="#383838" points="817.7014,279.1399,815,285.8259,820.1326,290.891,822.8341,284.205,817.7014,279.1399" style="stroke: #383838; stroke-width: 1.0;"/><!--link Currency to FromTo--><path d="M650.0273,457 C669.5409,457 689.6075,457 709.1881,457 " fill="none" id="Currency-FromTo" style="stroke: #383838; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="722.3125,457,716.3125,453,710.3125,457,716.3125,461,722.3125,457" style="stroke: #383838; stroke-width: 1.0;"/><polygon fill="#383838" points="636.8459,457,645.8459,461,641.8459,457,645.8459,453,636.8459,457" style="stroke: #383838; stroke-width: 1.0;"/><line style="stroke: #383838; stroke-width: 1.0;" x1="641.8459" x2="649.846" y1="457" y2="456.9999"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="49" x="655" y="450.5684">m_from</text><!--link Currency to FromTo--><path d="M649.6267,476.0582 C653.9636,476.41 658.2625,476.726 662.5,477 C677.6542,477.9799 693.4591,477.9864 709.2095,477.3332 " fill="none" id="Currency-FromTo" style="stroke: #383838; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="722.4116,476.6363,716.2091,472.9581,710.4283,477.2689,716.6308,480.947,722.4116,476.6363" style="stroke: #383838; stroke-width: 1.0;"/><polygon fill="#383838" points="636.5261,474.9017,645.1395,479.6777,641.5067,475.3414,645.843,471.7087,636.5261,474.9017" style="stroke: #383838; stroke-width: 1.0;"/><line style="stroke: #383838; stroke-width: 1.0;" x1="641.5067" x2="649.4758" y1="475.3414" y2="476.045"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="32" x="663.5" y="473.5684">m_to</text><!--link Money to Currency--><path d="M358.4043,457 C361.3727,457 364.3411,457 367.3095,457 " fill="none" id="Money-Currency" style="stroke: #383838; stroke-width: 1.0;"/><polygon fill="#383838" points="380.3248,457,371.3248,453,375.3248,457,371.3248,461,380.3248,457" style="stroke: #383838; stroke-width: 1.0;"/><line style="stroke: #383838; stroke-width: 1.0;" x1="375.3248" x2="367.3248" y1="457" y2="456.9999"/><polygon fill="#383838" points="345.252,457,351.252,461,357.252,457,351.252,453,345.252,457" style="stroke: #383838; stroke-width: 1.0;"/><!--
@startuml class
skinparam {
  monochrome true
  shadowing false
}
hide circle
hide empty members

class Bank {
  + reduce(const Money&, const Currency&, const Rate&) const : const Money
}

class Currency {
  - m_name : const std::string
  + Currency(const std::string&)
  + operator==(const Currency&) const : bool
}

class Money {
  - m_amount : std::unordered_map<Currency, int>
  + Money()
  + Money(int, const Currency&

  + operator==(const Money&) const : bool

  + operator+(const Money&) const : const Money
  + operator*(int) const : const Money

  + reduce(const Currency&, const Rate&) const: const Money

  + {static} dollar(int) : Money
  + {static} franc(int) : Money

  - void add(int, const Currency&)
}

class Rate {
  - m_rates : std::unordered_map<FromTo, double>
  + set(const Currency&, const Currency&, double) : void
  + find(const Currency&, const Currency&) const : std::optional<double>
}

class "Rate::FromTo" as FromTo {
  + FromTo(const Currency&, const Currency&)

  + operator==(const FromTo&) const : bool

  + hash() const : std::size_t
}

Bank ...> Money
Bank ...> Currency
Bank ..> Rate
Rate *- -> FromTo
FromTo o-l-> Currency : m_from
FromTo o-l-> Currency : m_to
Money *-r-> Currency

note top of Bank: 為替変換器
note bottom of Money: 手持ちの貨幣\n(複数の通貨を保持可)
note bottom of Currency : 通貨の種類
note right of Rate: 為替レート

@enduml

PlantUML version 1.2019.03(Sun Mar 10 20:04:44 JST 2019)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.8.0_121-b13
Operating System: Mac OS X
OS Version: 10.13.6
Default Encoding: UTF-8
Language: ja
Country: JP
--></g></svg>